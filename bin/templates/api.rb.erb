# frozen_string_literal: true

require "peddler/api"

module Peddler
  class API
    <%= format_text(model["info"]["title"], 4) %>
    #
    <%= format_text(model["info"]["description"], 4) %>
    class <%= api_data[:class_name] %> < API
      <% operations.each do |operation| %>
        <%= generate_method_docs(operation["description"], operation["parameters"]) %>
        # @return [Hash] The API response
        def <%= snakecase(operation["operationId"]) %><%= generate_parameters(operation["parameters"], snakecase(operation["operationId"]), 6) %>
          path = "<%= operation["path"] %>"
          <% if operation["body_param"] -%>
            body = <%= snakecase(operation["body_param"]["name"]) %>
          <% end -%>
          <% if operation["query_params"]&.any? -%>
            params = {
              <%= operation["query_params"].map { |p| %("#{p["name"]}" => #{snakecase(p["name"])}) }.join(",\n    ") %>
            }.compact
          <% end -%>

          <% http_method = operation["method"].downcase %>
          <% method_args = ["path"] %>
          <% method_args << "body:" if operation["body_param"] %>
          <% method_args << "params:" if operation["query_params"]&.any? %>

          <% if operation["rate_limit"] %>
            rate_limit(<%= operation["rate_limit"] %>).<%= http_method %>(<%= method_args.join(", ") %>)
          <% else %>
            <%= http_method %>(<%= method_args.join(", ") %>)
          <% end %>
        end
      <% end %>
    end
  end
end
