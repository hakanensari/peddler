require "peddler/api"

module Peddler
  class API
    <%= format_text(title, 4) %>
    #
    <%= format_text(description, 4) %>
    class <%= class_name %> < API
      <% operations.each do |operation| %>
        <%= generate_method_docs(operation) %>
        def <%= operation["name"] %><%= generate_parameters(operation["parameters"], operation["name"], 6) %>
          <% if !operation["static_sandbox"] && !operation["dynamic_sandbox"] -%>
              cannot_sandbox!
          <% elsif operation["sandbox_only"] %>
              must_sandbox!
          <% end %>
          path = "<%= operation["path"] %>"
          <% if operation["body_param"] && operation["body_param"]["name"] != "body" -%>
              body = <%= snakecase(operation["body_param"]["name"]) %>
          <% end -%>
          <% if operation["query_params"]&.any? -%>
              params = {
              <%= operation["query_params"].map { |p| %("#{p["name"]}" => #{snakecase(p["name"])}) }.join(",\n    ") %>
              }.compact
          <% end -%>
          <% http_method = operation["method"].downcase %>
          <% method_args = ["path"] %>
          <% method_args << "body:" if operation["body_param"] %>
          <% method_args << "params:" if operation["query_params"]&.any? %>
          <% if operation["rate_limit"] %>
              meter(rate_limit).<%= http_method %>(<%= method_args.join(", ") %>)
          <% else %>
              <%= http_method %>(<%= method_args.join(", ") %>)
          <% end %>
        end
      <% end %>
    end
  end
end
